@page "/servers/addServer"
@rendermode InteractiveServer

@inject NavigationManager NavigationManager

<h3>Add Server</h3>
<br/>
<br/>
<EditForm Model="server" FormName="formAddServer" OnValidSubmit="Submit">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>

    <div class="row mb-3">
            <div class="col-2">
                <label for="exampleFormControlInput1" class="form-label">Name</label>
            </div>
            <div class="col-6">
                <InputText @bind-Value="server.Name" class="form-control"></InputText>
            </div>
            <div class="col">
                <ValidationMessage For="() => server.Name"></ValidationMessage>
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-2">
                <label for="exampleFormControlTextarea1" class="form-label">City</label>
            </div>
            <div class="col-6">
                <InputText @bind-Value="server.City" class="form-control"></InputText>
            </div>
            <div class="col">
                <ValidationMessage For="() => server.City"></ValidationMessage>
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-2">
                <label for="exampleFormControlTextarea1" class="form-label">Online</label>
            </div>
            <div class="col-6">
                <InputCheckbox @bind-Value="server.IsOnline" class="form-check-input"></InputCheckbox>
            </div>
        </div>
        <br/>
        <button class="btn btn-primary" type="submit">Add</button>
        &nbsp;
        <a href="/servers" class="btn btn-primary">Close</a>
</EditForm>

@code {

    [CascadingParameter]
    private HttpContext HttpContext { get; set; }

    [SupplyParameterFromForm]
    private Server? server { get; set; }

    protected override void OnInitialized()
    {
        if (HttpContext.Request.Method != "POST")
        {
            server = new Server();
        }
    }
    private void Submit()
    {
        if (server != null)
        {
            ServersRepository.AddServer(server);
        }
        NavigationManager.NavigateTo("/servers");
    }
}
